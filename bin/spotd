#!/usr/bin/env python

import collections
from spot.runner import FactSchema, RunnerSchema
from flask import Flask, request
from flask_restful import Api, Resource


app = Flask(__name__)
api = Api(app)

workflows = {}
facts = collections.defaultdict(list)


class WorkflowList(Resource):
    def get(self):
        schema = RunnerSchema()
        return {k: schema.dump(v).data for k, v in workflows.items()}

    def post(self):
        data = request.get_json()
        schema = RunnerSchema()
        result = schema.loads(data)

        if result.errors:
            return 400

        runner = result.data
        workflows[runner.uid] = runner
        return {}, 201, {'Location': '/api/workflows/{}'.format(runner.uid)}


class Workflow(Resource):
    def get(self, uid):
        if uid in workflows:
            return workflows[uid]

        return 404


class FactList(Resource):
    def get(self, uid):
        if uid in facts:
            return facts[uid]

        return 404

    def post(self, uid):
        for data in request.get_json():
            schema = FactSchema()
            fact = schema.load(data)
            facts[uid].append(data)

        return 201


api.add_resource(WorkflowList, '/api/workflows')
api.add_resource(Workflow, '/api/workflows/<string:uid>')
api.add_resource(FactList, '/api/workflows/<string:uid>/facts')


if __name__ == '__main__':
    app.run(debug=True)
